import onnxruntime as ort
import torch
import os
import argparse

# Define the parser and arguments
parser = argparse.ArgumentParser(description='VR Avatar')
parser.add_argument('--filename', type=str, default='checkpoint-20', help='Checkpoint file name')
parser.add_argument('--cuda', action='store_true', help='Use CUDA if available')
# ... [your other arguments]

# Parse the arguments
FLAGS = parser.parse_args()

def onnx_inference(onnx_model_path, x_data, c_data, input_name_x=None, input_name_c=None):
    # Load ONNX model
    ort_session = ort.InferenceSession(onnx_model_path)

    # If input names are not provided, retrieve them based on order
    if not input_name_x or not input_name_c:
        input_name_x = ort_session.get_inputs()[0].name
        input_name_c = ort_session.get_inputs()[1].name

    # Prepare input data for ONNX model
    input_data = {input_name_x: x_data, input_name_c: c_data}

    # Perform inference
    predictions = ort_session.run(None, input_data)

    return predictions


def main(args):
    # ... [rest of your main function]
    # CUDA support


    # Hardcode a single sequence length data
    single_input_data = torch.tensor([
        [
                [-0.45798, 4.45365, 169.757, -6.00932, 6.46395, 6.67902, 4.25987, -22.0014, -8.94038, -19.9015, 0, -25.9149, 36.9221, 18.4261, -10.822, 0, -20.89, -10.3936, 25.6793, -5.39719, 0, 23.68, 0, 13.3336, -50.7611, -2.70376, -90.7388, 0, 31.8222, 122.91, -37.9781, -4.34506, 0],
                [-0.387422, 4.44934, 169.737, -5.9434, 6.34963, 6.66996, 4.26851, -22.0411, -9.03075, -19.7519, 0, -26.2413, 36.8546, 17.9191, -10.8106, 0, -20.9924, -10.6659, 25.743, -5.34436, 0, 23.6418, 0, 13.2436, -50.8955, -2.76681, -92.0025, 0, 32.4139, 123.655, -38.8505, -4.60015, 0],
                [-0.301324, 4.47992, 169.583, -5.89122, 6.25402, 6.75218, 4.29624, -22.0769, -9.09481, -19.5838, 0, -26.5121, 36.7716, 17.4297, -10.6796, 0, -21.0737, -11.048, 25.73, -5.38789, 0, 23.5982, 0, 13.2028, -50.9749, -2.81823, -93.1305, 0, 32.9603, 124.253, -39.683, -4.76552, 0],
                [-0.231964, 4.53137, 169.443, -5.87359, 6.14478, 6.85522, 4.33287, -22.0851, -9.16461, -19.4278, 0, -26.7703, 36.7044, 17.0016, -10.5928, 0, -21.18, -11.4675, 25.8121, -5.44867, 0, 23.5908, 0, 13.1304, -51.0585, -2.84615, -94.1965, 0, 33.4839, 124.703, -40.3627, -4.92437, 0],
                [-0.213816, 4.57636, 169.31, -5.91996, 6.01442, 6.9153, 4.40642, -22.0722, -9.19557, -19.3107, 0, -26.9899, 36.6993, 16.6529, -10.5516, 0, -21.337, -11.8788, 25.928, -5.45108, 0, 23.5812, 0, 13.1019, -51.0894, -2.89541, -95.0336, 0, 33.9684, 125.018, -40.9204, -4.97953, 0],
                [-0.231484, 4.60085, 169.15, -5.99345, 5.84723, 6.97277, 4.45221, -22.0625, -9.1895, -19.1967, 0, -27.1169, 36.6998, 16.3331, -10.4975, 0, -21.5565, -12.1821, 26.0045, -5.52342, 0, 23.5572, 0, 13.0957, -51.0608, -2.92573, -95.858, 0, 34.3418, 125.359, -41.2121, -5.07261, 0],
                [-0.28032, 4.6305, 168.99, -6.08684, 5.66602, 7.04836, 4.46695, -22.0501, -9.18385, -19.1389, 0, -27.2183, 36.7506, 16.1117, -10.5271, 0, -21.9027, -12.2058, 26.0553, -5.49022, 0, 23.5237, 0, 13.0877,-51.002, -2.98233, -96.396, 0, 34.6774, 125.495, -41.5543, -5.16394, 0],
                [-0.374054, 4.63664, 168.801, -6.23077, 5.42508, 7.12614, 4.51755, -22.0406, -9.12238, -19.0999, 0, -27.2655, 36.8301, 15.9895, -10.6345, 0, -22.2923, -12.2395, 26.2191, -5.49584, 0, 23.4884, 0, 13.1205, -50.8652, -3.0232, -96.7286, 0, 34.8992, 125.807, -41.8411, -5.15028, 0],
                [-0.486258, 4.61771, 168.589, -6.37915, 5.15901, 7.24423, 4.51044, -22.0976, -9.0916, -19.0763, 0, -27.2959, 36.885, 15.9034, -10.6629, 0, -22.6544, -12.463, 26.3778, -5.52281, 0, 23.4551, 0, 13.1628, -50.7309, -3.04815, -96.9423, 0, 35.0814, 126.058, -42.076, -5.23316, 0],
                [-0.54185, 4.62083, 168.376, -6.47768, 4.93037, 7.37021, 4.4773, -22.1745, -9.05139, -19.0598, 0, -27.2982, 36.9466, 15.8814, -10.7414, 0, -23.069, -12.3962, 26.4925, -5.58018, 0, 23.4348, 0, 13.2095, -50.5808, -3.0996, -96.965, 0, 35.1707, 126.227, -42.2199, -5.29256, 0],
                [-0.685168, 4.61345, 168.126, -6.65351, 4.68581, 7.53583, 4.43639, -22.3082, -9.0069, -19.0513, 0, -27.281, 36.9977, 15.9259, -10.8887, 0, -23.5303, -12.2836, 26.6627, -5.51531, 0, 23.402, 0, 13.2599, -50.4212, -3.16979, -96.8266, 0, 35.2042, 126.306, -42.3198, -5.34821, 0],
                [-0.823436, 4.60277, 167.887, -6.80847, 4.43938, 7.70214, 4.37949, -22.4482, -8.9576, -19.0645, 0, -27.2762, 37.033, 16.0531, -11.0474, 0, -23.9901, -12.0137, 26.8659, -5.49484, 0, 23.3809, 0, 13.3087, -50.2762, -3.19446, -96.699, 0, 35.1774, 126.487, -42.3048, -5.29217, 0],
                [-0.944697, 4.60285, 167.657, -6.95461, 4.20584, 7.85166, 4.31442, -22.6048, -8.91085, -19.0712, 0, -27.2227, 37.0794, 16.2251, -11.3422, 0, -24.4568, -11.5818, 27.0515, -5.45575, 0, 23.3721, 0, 13.3684, -50.1278, -3.20491, -96.4641, 0, 35.11, 126.551, -42.2691, -5.26872, 0],
                [-1.14647, 4.56159, 167.426, -7.14128, 3.93818, 8.02851, 4.2178, -22.7927, -8.88045, -19.0964, 0, -27.1924, 37.0804, 16.4125, -11.5991, 0, -24.8457, -11.1804, 27.2268, -5.40183, 0, 23.348, 0, 13.4018, -50.0179, -3.22444, -96.1846, 0, 35.0292, 126.492, -42.1656, -5.23005, 0],
                [-1.34621, 4.535, 167.209, -7.32794, 3.69286, 8.19304, 4.146, -22.958, -8.85216, -19.1462, 0, -27.123, 37.1134, 16.6132, -11.9706, 0, -25.1965, -10.6477, 27.3174, -5.31425, 0, 23.3513, 0, 13.4197, -49.938, -3.23566, -95.8613, 0, 34.9117, 126.31, -41.997, -5.24318, 0],
                [-1.4574, 4.53866, 167.041, -7.4536, 3.5043, 8.31584, 4.0938, -23.1268, -8.81482, -19.1777, 0, -27.0361, 37.1166, 16.8112, -12.3361, 0, -25.4192, -10.2684, 27.4009, -5.23561, 0, 23.3856, 0, 13.4404, -49.8696, -3.19418, -95.5445, 0, 34.7539, 126.192, -41.8121, -5.19893, 0],
                [-1.54537, 4.47959, 166.808, -7.53918, 3.27972, 8.51536, 4.05581, -23.2969, -8.79603, -19.2372, 0, -26.9528, 37.1169, 16.9901, -12.6742, 0, -25.5124, -10.0522, 27.4647, -5.18388, 0, 23.4277, 0, 13.4441, -49.8297, -3.17244, -95.1325, 0, 34.5604, 126.005, -41.6313, -5.10152, 0],
                [-1.51985, 4.37426, 166.575, -7.50498, 3.07314, 8.70422, 4.03606, -23.4598, -8.77618, -19.331, 0, -26.8399, 37.1182, 17.1162, -12.9986, 0, -25.4558, -9.82793, 27.5089, -5.20934, 0, 23.4893, 0, 13.4742, -49.8019, -3.12676, -94.6505, 0, 34.2795, 125.78, -41.3671, -5.04349, 0],
                [-1.4375, 4.2724, 166.358, -7.42219, 2.93517, 8.85968, 4.06321, -23.6247, -8.72229, -19.4477, 0, -26.7157, 37.0784, 17.2006, -13.1588, 0, -25.2072, -9.85355, 27.5051, -5.23399, 0, 23.577, 0, 13.528, -49.8023, -3.12037, -93.9914, 0, 33.9409, 125.35, -41.0673, -4.96596, 0],
                [-1.3882, 4.21193, 166.133, -7.37557, 2.8447, 8.98738, 4.12411, -23.7446, -8.60606, -19.5376, 0, -26.5938, 36.9465, 17.3207, -13.2225, 0, -24.8619, -10.0845, 27.5288, -5.19521, 0, 23.6061, 0, 13.6207, -49.7141, -3.14094, -93.1511, 0, 33.525, 124.635, -40.7635, -4.89698, 0],
                [-1.30516, 4.21002, 165.969, -7.305, 2.83161, 9.04373, 4.20135, -23.855, -8.46744, -19.5629, 0, -26.5386, 36.7001, 17.5084, -13.1713, 0, -24.4492, -10.1223, 27.4733, -5.22025, 0, 23.5829, 0, 13.6991, -49.5878, -3.14066, -92.3751, 0, 33.0853, 124.086, -40.3904, -4.75416, 0],
                [-1.24046, 4.232, 165.868, -7.19262, 2.86313, 8.95967, 4.28989, -24.0234, -8.23492, -19.6284, 0, -26.4329, 36.4161, 17.7645, -13.0911, 0, -24.0722, -10.0533, 27.4368, -5.23523, 0, 23.4705, 0, 13.8183, -49.4273, -3.10924, -91.5538, 0, 32.5909, 123.566, -39.9689, -4.67888, 0],
                [-1.22486, 4.25367, 165.799, -7.15075, 2.93995, 8.84797, 4.35478, -24.2856, -8.028, -19.6826, 0, -26.3301, 36.1814, 18.0812, -13.1257, 0, -23.8155, -9.89494, 27.425, -5.18125, 0, 23.4176, 0, 13.888, -49.4137, -3.0681, -90.9644, 0, 32.2651, 123.224, -39.6649, -4.58626, 0],
                [-1.25364, 4.25863, 165.766, -7.16839, 3.07478, 8.7078, 4.48873, -24.7105, -7.80338, -19.7592, 0, -26.2499, 36.0841, 18.4742, -13.5141, 0, -23.7442, -9.21557, 27.5492, -5.1223, 0, 23.385, 0, 13.8975, -49.4701, -3.0796, -90.5428, 0, 32.0108, 122.831, -39.4111, -4.58856, 0],
                [-1.32509, 4.2527, 165.81, -7.23912, 3.25623, 8.51605, 4.59706, -25.2705, -7.60688, -19.8241, 0, -26.1418, 35.9751, 18.788, -13.8389, 0, -23.6124, -8.66808, 27.7997, -5.08545, 0, 23.4125, 0, 13.8937, -49.6468, -3.03695, -90.3755, 0, 31.8516, 122.585, -39.2199, -4.515, 0],
                [-1.35637, 4.26838, 165.896, -7.27588, 3.53292, 8.3133, 4.69706, -25.9652, -7.4405, -19.9678, 0, -26.0808, 35.9867, 19.1231, -14.3345, 0, -23.5048, -7.94074, 28.2042, -4.98592, 0, 23.457, 0, 13.8822, -49.8719, -2.9925, -90.2892, 0, 31.7317, 122.293, -39.1632, -4.42353, 0],
                [-1.38482, 4.28046, 165.979, -7.30536, 3.84693, 8.13823, 4.78583, -26.7403, -7.28199, -20.1206, 0, -26.0403, 35.9932, 19.4048, -14.8824, 0, -23.2751, -7.27511, 28.8199, -4.97765, 0, 23.497, 0, 13.8437, -50.1174, -2.98337, -90.1653, 0, 31.6352, 121.766, -39.1308, -4.42192, 0],
                [-1.45638, 4.23971, 166.041, -7.39992, 4.06676, 7.98295, 4.93565, -27.5153, -7.15007, -20.2965, 0, -25.9678, 36.0425, 19.7095, -15.5412, 0, -22.9503, -6.70191, 29.8122, -5.01341, 0, 23.5742, 0, 13.8029, -50.3118, -2.93075, -89.9956, 0, 31.4935, 121.303, -39.0809, -4.40721, 0],
                [-1.41645, 4.21703, 166.138, -7.37127, 4.31869, 7.81609, 5.06275, -28.2979, -7.05903, -20.5115, 0, -25.8744, 36.0827, 20.2993, -16.2782, 0, -21.9796, -5.82045, 33.3609, -5.31621, 0, 23.6404, 0, 13.7647, -50.5491, -2.66933, -89.619, 0, 31.1958, 120.931, -38.9681, -4.16146, 0],
                [-1.40723, 4.15131, 166.134, -7.36237, 4.50431, 7.72742, 5.24584, -29.1032, -6.95886, -20.7389, 0, -25.7634, 36.1298, 20.6157, -17.812, 0, -21.4769, -5.40032, 35.4221, -5.33091, 0, 23.6454, 0, 13.7835, -50.5626, -2.52007, -89.1087, 0, 30.9783, 119.994, -38.8412, -4.06433, 0],
                [-1.31015, 4.14048, 166.192, -7.27303, 4.73833, 7.58756, 5.42821, -31.1059, -6.82506, -21.1062, 0, -25.6565, 35.7334, 21.2432, -17.9685, 0, -20.6646, -4.26863, 38.1249, -4.97079, 0, 23.6431, 0, 13.7993, -50.4765, -2.09651, -87.9923, 0, 30.4432, 119.011, -38.3985, -3.90731, 0],
                [-1.26008, 4.05039, 166.264, -7.20046, 4.84344, 7.42903, 5.65052, -30.522, -6.81483, -21.0214, 0, -25.5369, 35.9238, 20.9171, -18.0686, 0, -20.9949, -4.88736, 37.0914, -5.29832, 0, 23.6423, 0, 13.8233, -50.5169, -2.29881, -88.5744, 0, 30.7157, 119.505, -38.6633, -4.02246, 0],
                [-1.13156, 3.95689, 166.358, -7.03177, 4.94125, 7.27978, 5.74091, -31.1059, -6.82506, -21.1062, 0, -25.4305, 35.7334, 21.2432, -17.9685, 0, -20.6646, -4.26863, 38.1249, -4.97079, 0, 23.6431, 0, 13.7993, -50.4765, -2.09651, -87.9923, 0, 30.4432, 119.011, -38.3985, -3.90731, 0]
            ]
    ], dtype=torch.float32)

    c_data = torch.empty(33)
    if args.cuda:
        single_input_data = single_input_data.cuda()
        c_data = c_data.cuda()

    # Use the hardcoded data for ONNX Runtime inference
    onnx_model_path = "cvae.onnx"
    predictions = onnx_inference(onnx_model_path, single_input_data.cpu().numpy(), c_data.cpu().numpy())
    print(predictions)

    # ... [rest of your main function]


if __name__ == '__main__':
    main(FLAGS)